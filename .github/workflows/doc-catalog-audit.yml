name: Documentation Catalog Audit

on:
  schedule:
    - cron: '0 12 * * *'  # Daily at 12:00 UTC
  pull_request:
    paths:
      - 'prds/**'
      - 'tools/**'
      - 'README.md'
      - 'INGESTION_GUIDE.md'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run catalog consistency audit
        run: python tools/audit_doc_catalog.py

      - name: Run metadata audit
        run: python tools/audit_doc_metadata.py

      - name: Run cross-reference audit
        run: python tools/audit_doc_links.py

      - name: Run advanced cross-reference analysis
        run: python tools/audit_cross_references.py

      - name: Audit schema/API mapper alignment
        run: python tools/audit_schema_api_mappers.py

      - name: Audit layout/schema alignment
        run: python tools/audit_layout_schema_alignment.py

      - name: Run companion document audit
        run: python tools/audit_companion_docs.py

      - name: Verify source maps
        run: python tools/verify_source_map.py

      - name: Run PRD documentation tests
        run: pytest tests/prd_docs -v --tb=short --junit-xml=pytest-results.xml

      - name: Run comprehensive audit suite
        run: python tools/run_all_audits.py

      - name: Generate GitHub Job Summary
        if: always()
        run: |
          echo "## 📊 Audit Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f artifacts/audit_summary.json ]; then
            PASSED=$(jq -r '.passed' artifacts/audit_summary.json)
            TOTAL=$(jq -r '.total' artifacts/audit_summary.json)
            FAILED=$(jq -r '.failed' artifacts/audit_summary.json)
            
            if [ "$FAILED" -eq 0 ]; then
              echo "### ✅ All $TOTAL checks passed!" >> $GITHUB_STEP_SUMMARY
            else
              echo "### ❌ $FAILED of $TOTAL checks failed" >> $GITHUB_STEP_SUMMARY
              echo "### ✅ $PASSED of $TOTAL checks passed" >> $GITHUB_STEP_SUMMARY
            fi
            
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "#### Check Details" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
            echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
            
            jq -r '.results[] | "| \(.name) | \(if .status == "passed" then "✅ PASS" else "❌ FAIL" end) |"' artifacts/audit_summary.json >> $GITHUB_STEP_SUMMARY
            
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "---" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "📄 Full reports available in workflow artifacts" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ No audit summary generated" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload audit artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: audit-artifacts
          path: |
            artifacts/**
            cross_reference_report.md
            pytest-results.xml
